// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace ExercicioCliente.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210326002016_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Model.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Aniversario")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DiasRetorno")
                        .HasColumnType("int");

                    b.Property<string>("Identificacao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("Model.Locacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLocacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("locacoes");
                });

            modelBuilder.Entity("Model.LocacaoVeiculoLeve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdLocacao")
                        .HasColumnType("int");

                    b.Property<int>("IdVeiculoLeve")
                        .HasColumnType("int");

                    b.Property<int?>("locacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("veiculoLeveId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("locacaoId");

                    b.HasIndex("veiculoLeveId");

                    b.ToTable("locacoesVeiculosLeves");
                });

            modelBuilder.Entity("Model.LocacaoVeiculoPesado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdLocacao")
                        .HasColumnType("int");

                    b.Property<int>("IdVeiculoPesado")
                        .HasColumnType("int");

                    b.Property<int?>("locacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("veiculoPesadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("locacaoId");

                    b.HasIndex("veiculoPesadoId");

                    b.ToTable("locacoesVeiculosPesados");
                });

            modelBuilder.Entity("Model.VeiculoLeve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Preco")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("veiculosLeves");
                });

            modelBuilder.Entity("Model.VeiculoPesado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Preco")
                        .HasColumnType("double");

                    b.Property<string>("Restricoes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("veiculosPesados");
                });

            modelBuilder.Entity("Model.Locacao", b =>
                {
                    b.HasOne("Model.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("Model.LocacaoVeiculoLeve", b =>
                {
                    b.HasOne("Model.Locacao", "locacao")
                        .WithMany()
                        .HasForeignKey("locacaoId");

                    b.HasOne("Model.VeiculoLeve", "veiculoLeve")
                        .WithMany()
                        .HasForeignKey("veiculoLeveId");
                });

            modelBuilder.Entity("Model.LocacaoVeiculoPesado", b =>
                {
                    b.HasOne("Model.Locacao", "locacao")
                        .WithMany()
                        .HasForeignKey("locacaoId");

                    b.HasOne("Model.VeiculoPesado", "veiculoPesado")
                        .WithMany()
                        .HasForeignKey("veiculoPesadoId");
                });
#pragma warning restore 612, 618
        }
    }
}
